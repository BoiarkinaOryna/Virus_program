import os # Взаємодія з операційною та файловою системою. Приклади застосування: запуск, створення файлів, отримання шляхів системи.
import sys # цей модуль надає доступ до деяких змінних, будемо застосовувати для роботи з додатком
import time # повертає час в секундах з початку епохи як число з плаваючею точкою
import json # робота з файлами де зберігаються дані (числа, строки (рядки), списки...) і обмін цими даними
import socket # використовуються для надсилання повідомлень через мережу. Модуль забезпечуює форму міжпроцесного зв'язку.
import base64 # кодує двійкові дані у друковані символи ASCII та декодує такі кодування назад у двійкові дані
import glob # Повертає список імен шляхів, які знаходяться в каталозі pythname

import pyautogui # імітація дій користувача

from PyQt5 import (
        QtCore, # Дозволяє зареєструвати тип події. Метод повертає ідентифікатор зареєстрованої події.
        QtGui, # Компоненти графічного інтерфейсу (елементу управління), що грунтуються на візуальном поданні.                          
        QtWidgets # Модуль з бібліотеки "QT" з набором графічних "віджетів" (компонентів користувацького інтерфейсу) для створення додатків із графічним інтерфейсом.
    )

from des import * # Використовується для шифрування даних

# Створюємо клас(інструкцію) My_Thread
class My_Thread(QtCore.QtThread):
    my_signal = QtCore.pyqtSignal(list)# Змінна що зберігає список сигналів
    # Створюємо метод конструктор, щоб описати характеристики класу
    def __init__(self, ip = None, port = None, parent = None):
        QtCore.QtThread.__init__(self, parent) # сповіщаємо батьківському класу QtThread, про наявність точного такого параметра у класа нащадка
        #
        self.IP = ip # особиста адреса пристрою в інтернеті
        self.PORT = port # номер (ключ) по якому можна підключитись до серверу 
        self.ACTIVE_SOCKET = None # 
        self.COMMAND = "screen" # 
        #
        self.SERVER = socket.socket(
            socket.AF_INET, # застосовується для використання мережевих протоколів IPV-4
            socket.SOCK_STREAM # константа яка забезпечує стабільний зв'язок між сервером та клієнтом
        ) 
        self.SERVER.setsockopt(
            socket.SOL_SOCKET, # рівень сокета
            socket.SO_REUSEADDR, # 
            1
        ) #
        self.SERVER.bind((self.IP, self.PORT)) #
        self.SERVER.listen(1) #
        
